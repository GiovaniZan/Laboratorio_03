###############################################################################
#                                                                             #
#     IAR Assembler V9.10.2.313/W64 for ARM 23/Jul/2021  15:09:20             #
#     Copyright 1999-2021 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  D:\utfpr_microprocessadores\Laboratorio_03\Exercicio18\asm.s#
#           List file     =  D:\utfpr_microprocessadores\Laboratorio_03\Exercicio18\Debug\List\asm.lst#
#           Object file   =  D:\utfpr_microprocessadores\Laboratorio_03\Exercicio18\Debug\Obj\asm.o#
#           Command line  =  -f                                               #
#                            D:\utfpr_microprocessadores\Laboratorio_03\Exercicio18\Debug\Obj\asm.o.rsp #
#                            (D:\utfpr_microprocessadores\Laboratorio_03\Exercicio18\asm.s #
#                            -OD:\utfpr_microprocessadores\Laboratorio_03\Exercicio18\Debug\Obj\ #
#                            -s+ -M<> -w+ -r                                  #
#                            -LD:\utfpr_microprocessadores\Laboratorio_03\Exercicio18\Debug\List\ #
#                            -t8 --cpu Cortex-M4 --fpu VFPv4_sp)              #
#                                                                             #
###############################################################################

    1                                   PUBLIC  __iar_program_start
    2                                   PUBLIC  __vector_table
    3                           
    4                                
    5                           
    6                                   SECTION .text:CODE:REORDER(2)
    7                                   
    8                                   ;; Keep vector table even if it's not
                                 referenced
    9                                   REQUIRE __vector_table
   10                                   
   11                                   THUMB
   12                            
   13                           
   14                           //        
   15                           //        Exercício 18
   16                           //•
   17                           //Utilize o projeto do Exercício 17 como
                                 base
   18                           //para um novo programa que incremente
                                 uma
   19                           //contagem binária nos LEDs do kit a
                                 cada
   20                           //pressionamento do botão SW1 e decremente
   21                           //a cada pressionamento do botão SW2
   22                           //•
   23                           //Sugestão:
   24                           //–
   25                           //Pesquise e idealize uma sub rotina que
                                 faça
   26                           //debounce dos botões por software e
                                 retorne
   27                           //os seus estados para o programa principal
   28                                   
   29                                   
   30                           //
   31                           // led1 - PN1
   32                           // led2 - PN0
   33                           // led3 - PF4
   34                           // led4 - PF0
   35                           
   36                           
   37                           
   38                           
   39                           __iar_program_start
   40                           
   41                           SYSCTL_RCGCGPIO_R       EQU     0x400FE608
   42                           SYSCTL_PRGPIO_R         EQU     0x400FEA08
   43                           PORTN_BIT               EQU     1000000000000b
                                 ; bit 12 = Port N
   44                           PORTF_BIT               EQU     0000000100000b
                                 ; bit  5 = Port F
   45                           PORTJ_BIT               EQU     0001000000000b
                                 ; bit  8 = Port F
   46                           LEDMASK_PORT_N          EQU     00000011b
   47                           LEDMASK_PORT_F          EQU     00010001b
   48                           
   49                           
   50                           // endereços básicos da porta N
   51                           GPIO_PORTN_DATA_R       EQU     0x40064000
   52                           GPIO_PORTN_DIR_R        EQU     0x40064400
   53                           GPIO_PORTN_DEN_R        EQU     0x4006451C
   54                           
   55                           //endereços básicos da porta F
   56                           GPIO_PORTF_DATA_R       EQU     0x4005D000
   57                           GPIO_PORTF_DIR_R        EQU     0x4005D400
   58                           GPIO_PORTF_DEN_R        EQU     0x4005D51C
   59                           
   60                           
   61                           //endereços básicos da porta J
   62                           GPIO_PORTJ_DATA_R       EQU     0x40060000
   63                           GPIO_PORTJ_DIR_R        EQU     0x40060400
   64                           GPIO_PORTJ_PUR_R        EQU     0x40060510
   65                           GPIO_PORTJ_DEN_R        EQU     0x4006051C
   66                           
   67                           NOVACONTAGEM EQU 0x00000001
   68                           NOVOBOTAO EQU 0x00000002
   69                           NOVOBOTAOVALIDO EQU 0x00000004
   70                           
   71                                   
   72                                   
   73                           
   74                           // inicializa as portas
   75                           // contagem de tempo para 500ms realizado no
                                 registrador R0
   76                           // a cada 200ms atualiza os leds de acordo com
                                 o estado 
   77                           // dos botões
   78                           
   79                           // usa R0 para armazenar contador
   80                           // usa R1 para contar unidades de tempo de
                                 atraso
   81                           // Usa R2 como Flags para ações
   82                           // USA r3 PARA COMPARAÇÕES
   83                           
   84                                 
   85                           
   86                           main    
   87                           
   88                                   //LDR R0, =Iniciais ; ponteiro de
                                 origem
   89    00000000 4FF00000              MOV R0, #0
   90    00000004 6D4B                  LDR R3, =EstadoBotoesAnterior
   91    00000006 1860                  STR R0,[R3]
   92    00000008 6D4B                  LDR R3, =EstadoBotoesAtual
   93    0000000A 1860                  STR R0,[R3]
   94    0000000C 6D4B                  LDR R3, =contadorBotao
   95    0000000E 1860                  STR R0,[R3]
   96                                   
   97    00000010 00F088F8              BL inicializacaoPortas
   98                                   
   99    00000014 4FF00000              MOV R0, #0 ; UTILIZADO COMO CONTADOR de
                                                    estado
  100    00000018 4FF00001              MOV R1, #0 ; UTILIZADO COMO CONTADOR de
                                                    unidades de atraso
  101    0000001C 4FF00502              MOV R2, #5 ; UTILIZADO COMO flag para
                                                    ações do programa
  102                           main_loop
  103                           
  104                           
  105    00000020 92F0010F              TEQ R2, #NOVACONTAGEM ; // CHECA SE
                                                               HOUVE ALTERAÇÃO
                                                               DA CONTAGEM
  106    00000024 01D1                  BNE cont1
  107    00000026 00F04EF8              BL AtualizaLeds ;
  108                           cont1
  109    0000002A 00F00AF8              BL debounceBotoes
  110                                   //ADD R0, #1 ; adiciona 1 ao
                                 contador
  111                                   
  112    0000002E 92F0040F              TEQ R2, #NOVOBOTAOVALIDO
  113    00000032 01D1                  BNE cont2
  114    00000034 00F02AF8              BL atualizaContador
  115                           cont2
  116    00000038 22F00102              BIC R2, #NOVACONTAGEM ; // LIMPA FLAG
                                                               DA CONTAGEM
  117    0000003C 00F038F8              BL rotinaDeAtraso
  118                           
  119    00000040 EEE7                  B main_loop
  120                           //        B       main
  121                           
  122                           
  123                           /////// ROTINA PARA DEBOUNCE DE BOTÕES
                                 /////////
  124                           debounceBotoes
  125    00000042 03B4                  PUSH {R0-R1}
  126    00000044 2DE9F807              PUSH {R3-R10}
  127                                   
  128    00000048 5E4B                  LDR R3, =contadorBotao
  129    0000004A 1E68                  LDR R6, [R3]
  130    0000004C 5C4B                  LDR R3, =EstadoBotoesAtual
  131    0000004E 1D68                  LDR R5, [R3]
  132    00000050 5A4B                  LDR R3, =EstadoBotoesAnterior
  133    00000052 1D60                  STR R5, [R3] ; ATUALIZA estado de
                                                      botão
  134                                   
  135    00000054 5C49                  LDR R1, = GPIO_PORTJ_DATA_R
  136    00000056 4FF00C09              MOV R9, #0x00C
  137    0000005A 51F809A0              LDR R10, [R1, R9] ; LÊ PORTA j COM
                                                           MASCARAMENTO
  138    0000005E 6FEA0A0A              MVN R10, R10
  139    00000062 574B                  LDR R3, =EstadoBotoesAtual
  140    00000064 C3F800A0              STR R10, [R3] ; 
  141                                   
  142    00000068 5545                  CMP R5,R10 ; COMPARA SE HOUVE
                                                    ALTERAÇÃO
  143    0000006A 0CBF                  ITE EQ
  144    0000006C 0026                  MOVEQ R6, #0 ; ZERA R6
  145    0000006E 0136                  ADDNE R6, #1
  146                                   
  147    00000070 032E                  CMP R6, #3
  148    00000072 06BF                  ITTE EQ
  149    00000074 82F00402              EOREQ R2, #NOVOBOTAOVALIDO
  150    00000078 7640                  EOREQ R6,R6 ; ZERA R6
  151    0000007A 22F00402              BICNE R2, #NOVOBOTAOVALIDO
  152                                   
  153    0000007E 504B                  LDR R3, =EstadoBotoesAtual
  154    00000080 C3F800A0              STR R10, [R3]
  155                                   
  156    00000084 BDE8F807              POP {R3-R10}
  157    00000088 03BC                  POP {R0-R1}
  158                                   
  159    0000008A 7047                  BX LR
  160                           ////////////////////////////////////////
  161                           
  162                           /////// ROTINA PARA ATUALIZAR CONTADOR
                                 /////////////
  163                           
  164                           atualizaContador
  165    0000008C 2DE9FE07              PUSH {R1-R10}
  166                            
  167    00000090 4B4B                  LDR R3, =EstadoBotoesAtual
  168    00000092 1D68                  LDR R5, [R3]
  169                                   
  170    00000094 95F0030F              TEQ R5, #3
  171    00000098 07D0                  BEQ atualizaContador_Fim
  172                           
  173                           
  174    0000009A 022D                  CMP R5, #2
  175    0000009C 01D1                  BNE atualizaContador_teste2
  176    0000009E 00F10100              ADD R0, #1
  177                                   
  178                           atualizaContador_teste2        
  179    000000A2 012D                  CMP R5, #1
  180    000000A4 01D1                  BNE atualizaContador_Fim
  181    000000A6 A0F10100              SUB r0, #1
  182                                   
  183                           atualizaContador_Fim
  184                            
  185                            
  186    000000AA BDE8FE07              POP {R1-R10}
  187    000000AE 7047                  BX LR
  188                           
  189                           ////////////////////////////////////
  190                           
  191                           
  192                           
  193                           
  194                           
  195                           
  196                           //////// rotina de atraso/////////
  197                           ///// 10-ms /////// para o debounce ///
  198                           rotinaDeAtraso
  199    000000B0 2DE9FE07              PUSH {R1-R10}
  200                                   //MOVT R3, #0x000F ; constante de
                                 atraso 
  201    000000B4 4FF47A53              MOV R3, #0x3E80
  202    000000B8 13B1          rotinaDeAtraso_delay   CBZ R3, rotinaDeAtraso_t
                                                                heend ; 1
                                                                 clock
  203    000000BA A3F10103              SUB R3, R3, #1 ; 1 clock
  204    000000BE FBE7                  B rotinaDeAtraso_delay ; 3 clocks
  205                           rotinaDeAtraso_theend  //EOR R1, R1, R2 ;
                                 troca o estado
  206    000000C0 BDE8FE07              POP {R1-R10}
  207    000000C4 7047                  BX LR
  208                           ////////  fim da rotina de atraso/////////
  209                           
  210                           
  211                           
  212                           ////////////// rotina de atualização dos leds
                                 ///////////////////
  213                           // rotina de atualização de leds, conformecont
                                ador em R0
  214                           AtualizaLeds
  215                           // L4  L3  L2  L1  -> SEQUENCIADE LEDS 
                                 
  216                           // F0  F4  N0  N1  -> PORTA
  217                           // B3  B2  B1  B0  -> BIT DO CONTADOR
  218                           // B0  B4  B0  B1  -> BIT NA PORTA
  219    000000C6 2DE9FE07              PUSH {R1-R10}
  220    000000CA 00B5                  PUSH {LR}
  221    000000CC 4FF00102              MOV R2, #1
  222    000000D0 4FF00203              MOV R3, #2
  223    000000D4 4FF01004              MOV R4, #16
  224                                  // MOV R5, #0X08
  225                           
  226                                   // PREPARA REGISTRADORES PARA PORTA
                                 N
  227    000000D8 02EA5006              AND R6, R2, R0, LSR #1 ; DETERMINA O
                                                                LED 0 - PN1
                                                                
  228    000000DC 03EA4007              AND R7, R3, R0, LSL #1 ; DETERMINA O
                                                                LED 1 -
                                                                PN0
  229    000000E0 47EA0607              ORR R7, R7, R6
  230    000000E4 3949                  LDR R1, = GPIO_PORTN_DATA_R
  231    000000E6 6FF00308              MVN R8, #LEDMASK_PORT_N
  232    000000EA 00F010F8              BL AtualizaLedsPorta_X
  233                           
  234                            //       ORR R7, R7 ; LIMPA R7
  235                             //      ORR R6,R6
  236    000000EE 04EA8006              AND R6, R4 ,R0, LSL #2 ; DETERINA O LED
                                                                2 - PF4
  237    000000F2 02EAD007              AND R7, R2, R0, LSR #3 ; DETERMINA O
                                                                LED 3 -
                                                                PF0
  238    000000F6 47EA0607              ORR R7, R7, R6
  239    000000FA 3549                  LDR R1, = GPIO_PORTF_DATA_R
  240    000000FC 6FF01108              MVN R8, #LEDMASK_PORT_F
  241    00000100 00F005F8              BL AtualizaLedsPorta_X
  242                           
  243    00000104 5DF804EB              POP {LR}
  244    00000108 BDE8FE07              POP {R1-R10}
  245    0000010C 7047                  BX LR
  246                           
  247                           
  248                           AtualizaLedsPorta_X ; Leds D1, D2
  249    0000010E 4FF47F79              MOV R9, #0x3FC
  250    00000112 51F809A0              LDR R10, [R1, R9]
  251    00000116 0AEA080A              AND R10, R8 // ELIMINA OS BITS NÃO
                                                   ENVOLVIDOS
  252    0000011A 4AEA070A              ORR R10, R7 // AJUSTA OS BITS
                                                   ADEQUADOS
  253    0000011E 41F809A0              STR R10, [R1, R9]
  254    00000122 7047                  BX LR
  255                           
  256                           ////////////// fim da rotina de atualização
                                 dos leds ///////////////////
  257                           
  258                           
  259                           ////////// rotina de inicialiação das portas
                                 ///////////////
  260                           // inicializa portas utilizadas
  261                           inicializacaoPortas
  262    00000124 2DE9FF07              PUSH {R0-R10} // JUST IN CASE...
  263    00000128 4FF48052              MOV R2, #PORTN_BIT
  264    0000012C 42F02002              ORR R2, R2, #PORTF_BIT 
  265    00000130 42F40072              ORR R2, R2, #PORTJ_BIT 
  266    00000134 2748                  LDR R0, =SYSCTL_RCGCGPIO_R
  267    00000136 0168                  LDR R1, [R0] ; leitura do estado
                                                      anterior
  268    00000138 41EA0201              ORR R1, R2 ;   habilita port N , F e
                                                    J
  269    0000013C 0160                  STR R1, [R0] ; escrita do novo
                                                      estado
  270                           
  271    0000013E 2648                  LDR R0, =SYSCTL_PRGPIO_R   // aguarda
                                                  estabilização daporta
                                                  N
  272    00000140 0268          wait    LDR R2, [R0] ; leitura do estado
                                                      atual
  273    00000142 91EA020F              TEQ R1, R2 ; clock do port N , F e J
                                                    habilitado?
  274    00000146 FBD1                  BNE wait ; caso negativo, aguarda
  275                                   
  276                                   
  277                                   // prepara porta N - N1 e N0 como
                                 output
  278    00000148 4FF00302              MOV R2, #00000011b ; bit 0
  279                                   
  280                                   // habilita bit zero da porta N como
                                 saída N0=out
  281    0000014C 2348                  LDR R0, =GPIO_PORTN_DIR_R
  282    0000014E 0168                  LDR R1, [R0] ; leitura do estado
                                                      anterior
  283    00000150 41EA0201              ORR R1, R2 ; bit de saída
  284    00000154 0160                  STR R1, [R0] ; escrita do novo
                                                      estado
  285                           
  286                                   //habilita porta N como digital
  287    00000156 2248                  LDR R0, =GPIO_PORTN_DEN_R
  288    00000158 0168                  LDR R1, [R0] ; leitura do estado
                                                      anterior
  289    0000015A 41EA0201              ORR R1, R2 ; habilita função digital
  290    0000015E 0160                  STR R1, [R0] ; escrita do novo
                                                      estado
  291                           
  292                                   // INICIALIZA PORTA N, escreve sem ler
                                 antes
  293    00000160 4FF00004              MOV R4, #0
  294    00000164 1948                  LDR R0, = GPIO_PORTN_DATA_R
  295    00000166 4FF47F72              MOV R2, #0x3FC ; deslocamento para
                                                        acesso sem mascaramento
  296    0000016A 8450                  STR R4, [R0, R2]; coloca na porta Nsem
                                                         mascaramento, o
                                                         registrador R4
  297                           
  298                                   // prepara porta F - F4 e F0 como
                                 output
  299    0000016C 4FF01102              MOV R2, #00010001b ; bit 0
  300                           
  301                                   // habilita bit zero da porta F como
                                 saída N0=out
  302    00000170 1C48                  LDR R0, =GPIO_PORTF_DIR_R
  303    00000172 0168                  LDR R1, [R0] ; leitura do estado
                                                      anterior
  304    00000174 41EA0201              ORR R1, R2 ; bit de saída
  305    00000178 0160                  STR R1, [R0] ; escrita do novo
                                                      estado
  306                           
  307                                   //habilita porta F como digital
  308    0000017A 1B48                  LDR R0, =GPIO_PORTF_DEN_R
  309    0000017C 0168                  LDR R1, [R0] ; leitura do estado
                                                      anterior
  310    0000017E 41EA0201              ORR R1, R2 ; habilita função digital
  311    00000182 0160                  STR R1, [R0] ; escrita do novo
                                                      estado
  312                           
  313                                // INICIALIZA PORTA F, escreve sem ler
                                 antes
  314                               //  MOV R4, #0
  315    00000184 1248                  LDR R0, = GPIO_PORTF_DATA_R
  316                               //  MOV R2, #0x3FC ; deslocamento para
                                 acesso sem mascaramento
  317    00000186 8450                  STR R4, [R0, R2]; coloca na porta Nsem
                                                         mascaramento, o
                                                         registrador R4
  318                           
  319                           
  320                                   // prepara porta J - J1 e J0 como
                                 input
  321    00000188 4FF00302              MOV R2, #00000011b ; bit 0
  322                                   
  323                                   // habilita bit zero da porta J como
                                 input J0 = J1 = input
  324    0000018C 1748                  LDR R0, =GPIO_PORTJ_DIR_R
  325    0000018E 0168                  LDR R1, [R0] ; leitura do estado
                                                      anterior
  326    00000190 21EA0201              BIC R1, R2 ; limpa bits
  327    00000194 0160                  STR R1, [R0] ; escrita do novo
                                                      estado
  328                           
  329                                   //habilita porta J como digital
  330    00000196 1648                  LDR R0, =GPIO_PORTJ_DEN_R
  331    00000198 0168                  LDR R1, [R0] ; leitura do estado
                                                      anterior
  332    0000019A 41EA0201              ORR R1, R2 ; habilita função digital
  333    0000019E 0160                  STR R1, [R0] ; escrita do novo
                                                      estado
  334                           
  335                                   //habilita Pull Ups na porta
                                 J
  336    000001A0 1448                  LDR R0, =GPIO_PORTJ_PUR_R
  337    000001A2 0168                  LDR R1, [R0] ; leitura do estado
                                                      anterior
  338    000001A4 41EA0201              ORR R1, R2 ; habilita função digital
  339    000001A8 0160                  STR R1, [R0] ; escrita do novo
                                                      estado
  340                           
  341                                   // INICIALIZA PORTA J, escreve sem ler
                                 antes
  342    000001AA 4FF00004              MOV R4, #0
  343    000001AE 0648                  LDR R0, = GPIO_PORTJ_DATA_R
  344    000001B0 4FF47F72              MOV R2, #0x3FC ; deslocamento para
                                                        acesso sem mascaramento
  345    000001B4 8450                  STR R4, [R0, R2]; coloca na porta Nsem
                                                         mascaramento, o
                                                         registrador R4
  346                           
  347    000001B6 BDE8FF07              POP {R0-R10}
  348    000001BA 7047                  BX LR
  349                           ////////// fim da  rotina de inicialiação das
                                 portas ///////////////
  350                           
  351                           
  352                           
  353                           
  354                           
  355                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                ;;;;;;
  356                           ;; seção de constantes em ROM
  357                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                ;;;;;;
  358                           
  358.1                                  TABLE.32
  358.2  000001BC ........              Reference on line 90,132
  358.3  000001C0 ........              Reference on line 92,130,139,153,167
  358.4  000001C4 ........              Reference on line 94,128
  358.5  000001C8 00000640              Reference on line 135,343
  358.6  000001CC 00400640              Reference on line 230,294
  358.7  000001D0 00D00540              Reference on line 239,315
  358.8  000001D4 08E60F40              Reference on line 266
  358.9  000001D8 08EA0F40              Reference on line 271
  358.10 000001DC 00440640              Reference on line 281
  358.11 000001E0 1C450640              Reference on line 287
  358.12 000001E4 00D40540              Reference on line 302
  358.13 000001E8 1CD50540              Reference on line 308
  358.14 000001EC 00040640              Reference on line 324
  358.15 000001F0 1C050640              Reference on line 330
  358.16 000001F4 10050640              Reference on line 336
  359                                   SECTION .rodata:CONST(2)
  360                                   DATA
  361    00000000 0000000000000 Iniciais   DC32 0,0,0
                  00000000000  
  362                           
  363                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                ;;;;;;
  364                           ;; seção de variáveis não inicializadas em
                                 RAM
  365                           ;; ver arquivo de configuração do linker
                                 (my_cortex.icf)
  366                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                ;;;;;;
  367                           
  368                           //        //ASEGN .bss:DATA(2),0x20000000 ;
                                 início da RAM  //  Fatal Error[Lp049]: there
                                 was no reference to __iar_data_init3, but it
                                 is needed to initialize section bss (asm.o #8)
                                   
  369                           //// ASEGN é um label???
  370                           // //       minhasvariaveis bss:DATA(2),0x2000
                                0000 ; início da RAM  // resulta em bad
                                 instruction
  371                           // //       SECTION MYVARS :DATA(2) //  Fatal
                                 Error[Lp049]: there was no reference to
                                 __iar_data_init3, but it is needed to
                                 initialize section MYVARS (asm.o #8)  
                                 
  372                           //  //      SECTION MYVARS :DATA(2) ,0x2000000
                                0 //  Fatal Error[Lp049]: there was no
                                 reference to __iar_data_init3, but it is
                                 needed to initialize section MYVARS (asm.o #8)
                                   
  373                           //        section .bss:DATA(2),0x20000000 ;
                                 início da RAM  // Fatal Error[Lp049]: there
                                 was no reference to __iar_data_init3, but it
                                 is needed to initialize section .bss (asm.o
                                 #8)   
  374                           //
  375                           
  376                           //__iar_data_init3
  377                           //          section  minhasvariaveis:DATA(2)  
                                  
  378                           //          DATA
  379                           //EstadoBotoesAnterior   DS32 1 ; estado
                                 anterior
  380                           //EstadoBotoesAtual      DS32 1 ; estado
                                 atual
  381                           //contadorBotao          DS32 1 ;
  382                           
  383                           
  384                           //
  385                           //EstadoBotoesAnterior   .bss DS32 1 ; estado
                                 anterior
  386                           //EstadoBotoesAtual      .bss DS32 1 ; estado
                                 atual
  387                           //contadorBotao          .bss DS32 1
                                 ;
  388                           
  389                           
  390                           
  391                                   ASEGN .bss:DATA(2),0x20000000 ; início
                                 da RAM
  392                                   DATA
  393                           EstadoBotoesAnterior   DS32 1
  394                           EstadoBotoesAtual   DS32  1
  395                           contadorBotao   DS32  1
  396                           
  397                                    ;; Forward declaration of sections.
  398                                   SECTION CSTACK:DATA:NOROOT(3)
  399                                   SECTION .intvec:CODE:NOROOT(2)
  400                                   
  401                                   DATA
  402                           
  403                           __vector_table
  404    00000000 ........              DCD     sfe(CSTACK)
  405    00000004 ........              DCD     __iar_program_start
  406                           
  407    00000008 ........              DCD     NMI_Handler
  408    0000000C ........              DCD     HardFault_Handler
  409    00000010 ........              DCD     MemManage_Handler
  410    00000014 ........              DCD     BusFault_Handler
  411    00000018 ........              DCD     UsageFault_Handler
  412    0000001C 00000000              DCD     0
  413    00000020 00000000              DCD     0
  414    00000024 00000000              DCD     0
  415    00000028 00000000              DCD     0
  416    0000002C ........              DCD     SVC_Handler
  417    00000030 ........              DCD     DebugMon_Handler
  418    00000034 00000000              DCD     0
  419    00000038 ........              DCD     PendSV_Handler
  420    0000003C ........              DCD     SysTick_Handler
  421                           
  422                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                ;;;;;;
  423                           ;;
  424                           ;; Default interrupt handlers.
  425                           ;;
  426                           
  427                                   PUBWEAK NMI_Handler
  428                                   PUBWEAK HardFault_Handler
  429                                   PUBWEAK MemManage_Handler
  430                                   PUBWEAK BusFault_Handler
  431                                   PUBWEAK UsageFault_Handler
  432                                   PUBWEAK SVC_Handler
  433                                   PUBWEAK DebugMon_Handler
  434                                   PUBWEAK PendSV_Handler
  435                                   PUBWEAK SysTick_Handler
  436                           
  437                                   SECTION .text:CODE:REORDER:NOROOT(1)
  438                                   THUMB
  439                           
  440                           NMI_Handler
  441                           HardFault_Handler
  442                           MemManage_Handler
  443                           BusFault_Handler
  444                           UsageFault_Handler
  445                           SVC_Handler
  446                           DebugMon_Handler
  447                           PendSV_Handler
  448                           SysTick_Handler
  449                           Default_Handler
  450                           __default_handler
  451                                   CALL_GRAPH_ROOT __default_handler,
                                 "interrupt"
  452                                   NOCALL __default_handler
  453    00000000 FEE7                  B __default_handler
  454                           
  455                                   END
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 594         #
##############################



